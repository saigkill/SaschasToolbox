# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  NuGetDirectory: ${{ github.workspace }}/nuget

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release    

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Test
        run: dotnet test --verbosity normal --configuration Release /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=lcov      
      - name: Publish coverage report to coveralls.io
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: SaschasToolbox.Tests/TestResults/coverage.net8.0.info

  create_nuget:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
           fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release /p:ContinuousIntegrationBuild=true
      - run: dotnet pack --configuration Release --output ${{ env.NuGetDirectory }}

      - uses: actions/upload-artifact@v2
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: |
            ${{ env.NuGetDirectory }}/*.nupkg            

  validate_nuget:
    runs-on: ubuntu-latest
    needs: create_nuget
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - uses: actions/download-artifact@v2
        with:
          name: nuget
          path: ${{ github.workspace }}/nuget

      - name: Install nuget validator
        run: dotnet tool update Meziantou.Framework.NuGetPackageValidation.Tool --global

      - name: Validate nuget package
        run: meziantou.validate-nuget-package ${{ github.workspace }}/nuget/*

  deploy:
    runs-on: ubuntu-latest
    needs: validate_nuget
    steps:
       - uses: actions/download-artifact@v2
         with:
           name: nuget
           path: ${{ github.workspace }}/nuget

       - name: Setup .NET
         uses: actions/setup-dotnet@v4
         with:
            dotnet-version: 8.0.x
       - run: |
              find ${{ env.NuGetDirectory }} -type f -name "*.nupkg" | while read -r file; do
                dotnet nuget push "$file" --api-key ${{ secrets.NUGET_APIKEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
                dotnet nuget push "$file" --api-key ${{ secrets.GITHUB_TOKEN }} --source https://nuget.pkg.github.com/saigkill/index.json --skip-duplicate
              done

  doxygen:    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Doxygen
        uses: mattnotmitt/setup-doxygen@1.9.5
        with:          
           doxyfile-path: 'doxygen/Doxyfile'
      - name: Generate Doxygen documentation
        run: doxygen Doxyfile
      - name: Deploy Doxygen documentation
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./documentation/html
